(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const n=a(377),{lightningChart:s,SliceLabelFormatters:l,AreaSeriesTypes:i,PointShape:o,UIOrigins:x,UIDraggingModes:r,PieChartTypes:d,UIElementBuilders:m,emptyFill:u,emptyLine:p,Themes:S}=n,c=s({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:S[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:3,numberOfColumns:2}),g=c.createLegendPanel({columnIndex:1,rowIndex:2,columnSpan:1,rowSpan:1}),h=window.innerWidth>850?d.LabelsOnSides:d.LabelsInsideSlices;{const e=c.createPieChart({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1,pieOptions:{type:h},legend:{visible:!1}}).setTitle("CPU Usage").setMultipleSliceExplosion(!0);[{name:"OS",value:20},{name:"Browser",value:5},{name:"Video editor",value:10},{name:"Unused",value:65}].map(t=>e.addSlice(t.name,t.value)),e.setLabelFormatter(l.NamePlusRelativeValue),e.setLabelFont(e=>e.setSize(15)),g.add(e)}{const e=c.createChartXY({columnIndex:1,rowIndex:1,columnSpan:1,rowSpan:1,legend:{visible:!1}}).setTitle("Power Consumption"),t=e.addPointLineAreaSeries({}).setPointFillStyle(u).setName("CPU"),a=e.addPointLineAreaSeries({}).setPointFillStyle(u).setName("GPU");e.getDefaultAxisX().setTitle("Component Load (%)"),e.getDefaultAxisY().setTitle("Watts");const n=[{x:0},{x:4},{x:8},{x:12},{x:16},{x:20},{x:24},{x:28},{x:32},{x:36},{x:40},{x:44},{x:48},{x:52},{x:56},{x:60},{x:64},{x:68},{x:72},{x:76},{x:80},{x:84},{x:88},{x:92},{x:96},{x:100}],s=[{x:0},{x:4},{x:8},{x:12},{x:16},{x:20},{x:24},{x:28},{x:32},{x:36},{x:40},{x:44},{x:48},{x:52},{x:56},{x:60},{x:64},{x:68},{x:72},{x:76},{x:80},{x:84},{x:88},{x:92},{x:96},{x:100}];t.appendJSON(n.map(e=>({x:e.x,y:3.2*e.x+9.4*Math.random()}))),a.appendJSON(s.map(e=>({x:e.x,y:2.8*e.x+6.6*Math.random()}))),g.add(e)}{const e=c.createSpiderChart({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1,legend:{visible:!1}}).setTitle("Average Component Load").setScaleLabelFont(e=>e.setSize(12)).setAxisLabelFont(e=>e.setSize(14).setStyle("italic"));e.addSeries().setName("System Load").addPoints({axis:"CPU",value:10},{axis:"Memory",value:10},{axis:"Network",value:20},{axis:"Hard-Drive",value:40},{axis:"GPU",value:20}),e.setAxisInterval({start:0,end:50,stopAxisAfter:!0}),g.add(e)}{const e=c.createPieChart({columnIndex:0,rowIndex:1,columnSpan:1,rowSpan:2,pieOptions:{type:h},legend:{visible:!1}}).setTitle("Memory Usage").setMultipleSliceExplosion(!1).setInnerRadius(50),t={memory:["OS","Browser","Video editor","Unused"],values:[1e3,692,2e3,4500]},a=[];let n=0;for(let e=0;e<t.values.length;e++)n+=t.values[e],a.push({name:`${t.memory[e]}`,value:t.values[e]});a.map(t=>e.addSlice(t.name,t.value)),e.setLabelFormatter(l.NamePlusValue),e.setLabelFont(e=>e.setSize(15)),g.add(e),e.addUIElement(m.TextBox).setPosition({x:50,y:10}).setOrigin(x.Center).setDraggingMode(r.notDraggable).setMargin(5).setBackground(e=>e.setFillStyle(u).setStrokeStyle(p)).setTextFont(e=>e.setSize(12)).setText(`Total memory : ${n} MB`)}c.setRowHeight(0,2)}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);